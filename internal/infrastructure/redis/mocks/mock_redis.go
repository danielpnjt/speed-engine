// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/daniel/Desktop/danielpnjt/speed-engine/internal/infrastructure/redis/wrapper.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockWrapper is a mock of Wrapper interface.
type MockWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockWrapperMockRecorder
}

// MockWrapperMockRecorder is the mock recorder for MockWrapper.
type MockWrapperMockRecorder struct {
	mock *MockWrapper
}

// NewMockWrapper creates a new mock instance.
func NewMockWrapper(ctrl *gomock.Controller) *MockWrapper {
	mock := &MockWrapper{ctrl: ctrl}
	mock.recorder = &MockWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWrapper) EXPECT() *MockWrapperMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockWrapper) Delete(ctx context.Context, key string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", ctx, key)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockWrapperMockRecorder) Delete(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockWrapper)(nil).Delete), ctx, key)
}

// Get mocks base method.
func (m *MockWrapper) Get(ctx context.Context, key string) (interface{}, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, key)
	ret0, _ := ret[0].(interface{})
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockWrapperMockRecorder) Get(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockWrapper)(nil).Get), ctx, key)
}

// GetTTL mocks base method.
func (m *MockWrapper) GetTTL(ctx context.Context, key string) (time.Duration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTTL", ctx, key)
	ret0, _ := ret[0].(time.Duration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTTL indicates an expected call of GetTTL.
func (mr *MockWrapperMockRecorder) GetTTL(ctx, key interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTTL", reflect.TypeOf((*MockWrapper)(nil).GetTTL), ctx, key)
}

// Set mocks base method.
func (m *MockWrapper) Set(ctx context.Context, key string, expirationTime time.Duration, req interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", ctx, key, expirationTime, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockWrapperMockRecorder) Set(ctx, key, expirationTime, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockWrapper)(nil).Set), ctx, key, expirationTime, req)
}
