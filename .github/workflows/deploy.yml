name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  # Job for building and pushing Docker image
  build:
    name: Build and Push Docker Image
    runs-on: debian-12 # Change runner to Debian 12

    steps:
    # Checkout repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Set up ENV
    - name: Create .env file
      run: chmod +x ./deployment/production/env.sh

    # Set up Docker
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    # Run your build and push
    - name: Build and Push Docker Image
      run: |
        docker build --pull -t ghcr.io/danielpnjt/speed-engine:latest .
        docker push ghcr.io/danielpnjt/speed-engine:latest

    - name: Log out from Docker
      run: docker logout ghcr.io

  # Job for deployment
  deploy:
    name: Deploy to Production
    runs-on: debian-12 # Change runner to Debian 12
    needs: build
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Set up SSH
      run: |
        sudo apt-get update && sudo apt-get install -y openssh-client
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        eval "$(ssh-agent -s)"
        echo "${{ secrets.SSH_PRIVATE_KEY_PROD }}" | tr -d '\r' | ssh-add -
        ssh-keyscan -H ${{ secrets.VM_PROD }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Pull Docker Image
      run: ssh ${{ secrets.USER_PROD }}@${{ secrets.VM_PROD }} "docker pull ghcr.io/danielpnjt/speed-engine:latest"

    - name: Stop and Remove Old Container
      run: ssh ${{ secrets.USER_PROD }}@${{ secrets.VM_PROD }} "docker stop speed-engine || true && docker rm speed-engine || true"

    - name: Start New Container
      run: ssh ${{ secrets.USER_PROD }}@${{ secrets.VM_PROD }} "docker run -p 3021:3021 -d --name speed-engine ghcr.io/danielpnjt/speed-engine:latest"
